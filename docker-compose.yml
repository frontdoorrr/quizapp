version: '3.8'

services:
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - web
    networks:
      - quizapp-network

  web:
    build: .
    environment:
      - database_url=postgresql://postgres:postgres@db:5432/quizapp
      - DATABASE_USERNAME=postgres
      - DATABASE_PASSWORD=postgres
      - jwt_secret=THISISKEY
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    volumes:
      - .:/app
    expose:
      - 8000
    networks:
      - quizapp-network

  worker:
    build:
      context: .
      dockerfile: Dockerfile.worker
    environment:
      - database_url=postgresql://postgres:postgres@db:5432/quizapp
      - DATABASE_USERNAME=postgres
      - DATABASE_PASSWORD=postgres
      - jwt_secret=THISISKEY
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    volumes:
      - .:/app
    networks:
      - quizapp-network

  db:
    image: postgres:13
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=quizapp
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - quizapp-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - quizapp-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    command: redis-server --appendonly yes

volumes:
  postgres_data:
  redis_data:

networks:
  quizapp-network:
    driver: bridge
