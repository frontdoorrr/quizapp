version: '3.8'

services:
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - web
    networks:
      - quizapp-network
    restart: always

  web:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    # environment:
    #   - APP_ENV=production
    #   - DATABASE_USERNAME=postgres
    #   - DATABASE_PASSWORD=Geniusgame123!#
    #   - DB_HOST=prod-db-1.cfai06kw6v89.ap-northeast-2.rds.amazonaws.com
    #   - DB_PORT=5432
    #   - DB_NAME=quizapp
    #   - JWT_SECRET=THISISKEY
    #   - REDIS_HOST=redis
    #   - REDIS_PORT=6379
    #   - REDIS_DB=0
    expose:
      - 8000
    depends_on:
      redis:
        condition: service_started
    networks:
      - quizapp-network
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  worker:
    build:
      context: .
      dockerfile: Dockerfile.worker
    environment:
      - APP_ENV=production
      - DATABASE_USERNAME=${RDS_USERNAME}
      - DATABASE_PASSWORD=${RDS_PASSWORD}
      - DB_HOST=${RDS_HOST}
      - DB_PORT=${RDS_PORT}
      - DB_NAME=${RDS_DB_NAME}
      - JWT_SECRET=${JWT_SECRET}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
    depends_on:
      redis:
        condition: service_started
    networks:
      - quizapp-network
    restart: always

  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data
    networks:
      - quizapp-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    command: redis-server --appendonly yes
    restart: always

volumes:
  redis_data:

networks:
  quizapp-network:
    driver: bridge
